#!/usr/bin/env python3

# Copyright 2025 Marek Antoni Kurczynski (also known as Mark Alexander Anthony)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from llm_api import ask_openai                                  # Import API call function
from prompt_parser import parse_prompt_args                     # Import the parser for prompt instructions

import sys

def main() -> None:
    debugBool: bool = False
    testBool: bool = False                                      # Set True with ```--test``` flag
    args = sys.argv[1:]                                         # Cut out the ```gill``` command

    if debugBool:
        print(f"args are: ", args)

    if args[0] == "--test":
        testBool = True
        args = args[1:]

    try:
        prompt = parse_prompt_args(args)
    except ValueError as e:
        print(f"Argument error: {e}", file=sys.stderr)
        sys.exit(1)

    if prompt == "":
        print("Error: Provide at least one -m or -f option with content.", file=sys.stderr)
        sys.exit(1)

    if testBool or debugBool:
        print(prompt)
    else:
        try:
            result = ""
            response_stream = ask_openai(prompt)                       # Call OpenAI API function
            for event in response_stream:
                # Only accumulate the text deltas
                if event.type == "response.output_text.delta":
                    # `delta` is the field containing that chunk of text
                    result += event.delta
                    print(event.delta, end="", flush=True)
                # You can handle other event types if you want: e.g., done, content_part.done, etc.
        except Exception as e:
            print(f"OpenAI API error: {e}", file=sys.stderr)
            sys.exit(1)

if __name__ == "__main__":
    main()